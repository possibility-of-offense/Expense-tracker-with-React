{"version":3,"sources":["components/Expenses/Filter.module.css","components/UI/Author.js","components/UI/Card.js","components/UI/Button.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/UI/Badge.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpensesItems.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["module","exports","Author","props","author","tag","name","className","children","Card","radius","onMouseEnter","onMouseLeave","Button","useState","styling","styles","setStyles","useEffect","prev","cursor","onClick","style","FilterTitle","styled","div","show","ExpensesFilter","selected","setSelected","title","setTitle","showRestoreButton","setShowRestoreButton","checkStateValue","state","value","includes","classes","width","onFilterPrice","date","onChange","e","target","onSetFilterDate","onToggleShowAllExpensesChart","onSetFilteredExpenses","ExpenseDate","month","toLocaleString","day","year","getFullYear","Badge","ExpenseItem","context","expense","showDialog","setShowDialog","showBadge","setShowBadge","divRef","useRef","handleToggleShowBadge","amount","current","parentElement","classList","contains","add","remove","ref","backgroundColor","padding","border","borderRadius","quantity","display","fontSize","fontWeight","type","autoFocus","ExpensesList","filteredExpenses","expenses","filterDate","length","map","ind","id","ChartBar","barFillHeight","maxValue","Math","round","height","label","slice","Chart","max","dataPoints","el","dataPoint","ExpensesChart","chartDataPoints","exp","getMonth","Number","ExpensesItems","setFilterDate","setFilteredExpenses","showAllExpensesChart","setShowAllExpensesChart","filtered","filter","ExpenseForm","setAmount","submitted","setSubmitted","today","Date","dd","String","getDate","padStart","mm","yyyy","setExpenseDate","inputRef","onSubmit","preventDefault","onSaveExpenseData","focus","Boolean","placeholder","min","step","onCloseForm","NewExpense","showForm","onSetToggleShowForm","hideNewExpensesForm","obj","msg","expenseData","random","toString","onAddExpense","App","allExpenses","setExpenses","prevState","reset","sort","a","b","localeCompare","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.bb3ab815.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filtering-title\":\"Filter_filtering-title__3feMg\"};","import \"./Author.css\";\r\n\r\nfunction Author(props) {\r\n  if (props.author.tag) {\r\n    return <h2>{props.author.name}</h2>;\r\n  } else {\r\n    return (\r\n      <div className=\"author\">\r\n        <h5>\r\n          {props.children} {props.author.name}\r\n        </h5>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Author;\r\n","import \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  if (props.radius === \"medium\") {\r\n    return (\r\n      <div\r\n        onMouseEnter={props.onMouseEnter}\r\n        onMouseLeave={props.onMouseLeave}\r\n        className={\"card card-border-radius__medium \" + props.className}\r\n      >\r\n        {props.children}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div\r\n        onMouseEnter={props.onMouseEnter}\r\n        onMouseLeave={props.onMouseLeave}\r\n        className={\"card \" + props.className}\r\n      >\r\n        {props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction Button(props) {\r\n  const [styles, setStyles] = useState(props.styling);\r\n\r\n  useEffect(() => {\r\n    setStyles((prev) => ({ ...prev, cursor: \"pointer\" }));\r\n  }, []);\r\n\r\n  return (\r\n    <button className={props.className} onClick={props.onClick} style={styles}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../UI/Button\";\r\nimport styled from \"styled-components\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\nimport \"./ExpenseItem.css\";\r\nimport classes from \"./Filter.module.css\";\r\n\r\nconst FilterTitle = styled.div`\r\n  text-align: center;\r\n  display: ${(props) => (props.show ? \"none\" : \"block\")};\r\n\r\n  @media (max-width: 600px) {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const [selected, setSelected] = useState(\"2020\");\r\n  const [title, setTitle] = useState(\"Filter by price\");\r\n  const [showRestoreButton, setShowRestoreButton] = useState(false);\r\n\r\n  function handleSelectedDate(e) {\r\n    setSelected((prev) => (prev = e.target.value));\r\n    props.onSetFilterDate(e.target.value);\r\n    props.onToggleShowAllExpensesChart(false);\r\n\r\n    setShowRestoreButton(true);\r\n  }\r\n\r\n  function checkStateValue(state, value) {\r\n    if (state.includes(value)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function handleFilterByPrice() {\r\n    if (checkStateValue(title, \"price\")) {\r\n      props.onFilterPrice(true);\r\n    } else {\r\n      props.onFilterPrice(false);\r\n    }\r\n\r\n    setTitle((prev) =>\r\n      checkStateValue(prev, \"price\")\r\n        ? (prev = \"Filter by name\")\r\n        : (prev = \"Filter by price\")\r\n    );\r\n  }\r\n\r\n  function handleRestoreExpenses() {\r\n    props.onSetFilterDate(null);\r\n    props.onSetFilteredExpenses((prev) => []);\r\n    props.onToggleShowAllExpensesChart(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <FilterTitle\r\n        className={classes[\"filtering-title\"]}\r\n        show={showRestoreButton}\r\n      >\r\n        It's time to filter stuff...\r\n      </FilterTitle>\r\n      <div className=\"expenses-filter__control\">\r\n        <div className=\"filtering\">\r\n          <label>Filter by year</label>\r\n          <Button\r\n            styling={{ width: \"200px\" }}\r\n            onClick={handleFilterByPrice}\r\n            className=\"expense-item__price\"\r\n          >\r\n            {title}\r\n          </Button>\r\n        </div>\r\n        {props.date ? (\r\n          <p>Currently selected date: {props.date}</p>\r\n        ) : (\r\n          <p>No date selected</p>\r\n        )}\r\n        <div>\r\n          <select value={selected} onChange={handleSelectedDate}>\r\n            <option value=\"2022\">2022</option>\r\n            <option value=\"2021\">2021</option>\r\n            <option value=\"2020\">2020</option>\r\n            <option value=\"2019\">2019</option>\r\n          </select>\r\n          <br />\r\n          {showRestoreButton && (\r\n            <Button onClick={handleRestoreExpenses} className=\"restore\">\r\n              Restore all expenses\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-EN\", {\r\n    month: \"short\",\r\n  });\r\n  const day = props.date.toLocaleString(\"en-EN\", {\r\n    month: \"2-digit\",\r\n  });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import \"./Badge.css\";\r\n\r\nfunction Badge(props) {\r\n  return (\r\n    <div className=\"badge\">\r\n      <h5>{props.children}</h5>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Badge;\r\n","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Author from \"../UI/Author\";\r\nimport Card from \"../UI/Card\";\r\nimport Badge from \"../UI/Badge\";\r\nimport { useState, useRef } from \"react\";\r\nimport Button from \"../UI/Button\";\r\n\r\n// https://flaviocopes.com/how-to-get-month-from-javascript-date/\r\n\r\nfunction ExpenseItem(props, context) {\r\n  const { expense } = props;\r\n  const author = {\r\n    name: \"Ventsislav Iliev\",\r\n  };\r\n\r\n  // Hooks\r\n  const [title, setTitle] = useState(props.expense.title);\r\n  const [showDialog, setShowDialog] = useState(false);\r\n  const [showBadge, setShowBadge] = useState(false);\r\n  const divRef = useRef(null);\r\n\r\n  // Handlers\r\n  function handleShowPopup(e) {\r\n    setShowDialog((prev) => !prev);\r\n  }\r\n\r\n  function handleChangingTitle(e) {\r\n    setTitle((prev) => (prev = e.target.value));\r\n  }\r\n\r\n  function handleAddingClasses(e) {\r\n    if (!divRef.current.parentElement.classList.contains(\"light-bg\")) {\r\n      divRef.current.parentElement.classList.add(\"light-bg\");\r\n    }\r\n  }\r\n\r\n  function handleRemovingClasses(e) {\r\n    if (divRef.current.parentElement.classList.contains(\"light-bg\")) {\r\n      divRef.current.parentElement.classList.remove(\"light-bg\");\r\n    }\r\n  }\r\n\r\n  function handleToggleShowBadge() {\r\n    if (expense.amount > 500) {\r\n      setShowBadge((prev) => !prev);\r\n    }\r\n  }\r\n\r\n  const btnChangeTitle = {\r\n    backgroundColor: \"skyblue\",\r\n    border: \"none\",\r\n    cursor: \"pointer\",\r\n    padding: \"6px 10px\",\r\n    display: \"block\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"bold\",\r\n  };\r\n\r\n  const btnQuantity = {\r\n    backgroundColor: \"#fff\",\r\n    padding: \"5px 10px\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <Card\r\n        onMouseEnter={handleToggleShowBadge}\r\n        onMouseLeave={handleToggleShowBadge}\r\n        className={`expense-item ${expense.amount > 500 ? \"red-bg\" : \"\"}`}\r\n      >\r\n        {showBadge && <Badge>Too high expense</Badge>}\r\n        <ExpenseDate date={expense.date} />\r\n        <div\r\n          onMouseEnter={handleAddingClasses}\r\n          onMouseLeave={handleRemovingClasses}\r\n          title={props.children[1]}\r\n          className=\"expense-item__description\"\r\n          ref={divRef}\r\n        >\r\n          <h2>{title}</h2>\r\n          <div className=\"expense-item__price\">${expense.amount}</div>\r\n          <Card radius=\"medium\" className=\"expense-item__quantity\">\r\n            <Button styling={btnQuantity}>Quantity: {expense.quantity}</Button>\r\n          </Card>\r\n        </div>\r\n        <Author author={author}>Expense of</Author>\r\n        &nbsp;\r\n        <Card radius=\"medium\">\r\n          <Button styling={btnChangeTitle} onClick={handleShowPopup}>\r\n            Change title\r\n          </Button>\r\n          {/* <button onClick={handleShowPopup}>Change title</button> */}\r\n        </Card>\r\n        {showDialog && (\r\n          <Card radius=\"medium\" className=\"popup-dialog\">\r\n            <div>\r\n              <h5>Set new title</h5>\r\n              <form>\r\n                <input\r\n                  type=\"text\"\r\n                  value={title}\r\n                  autoFocus\r\n                  onChange={handleChangingTitle}\r\n                />\r\n              </form>\r\n            </div>\r\n          </Card>\r\n        )}\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nfunction ExpensesList({ filteredExpenses, expenses, filterDate }) {\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {filteredExpenses.length > 0 ? (\r\n        filteredExpenses.map((expense, ind) => {\r\n          return (\r\n            <ExpenseItem key={expense.id} expense={expense}>\r\n              Expense by {expense.title}\r\n            </ExpenseItem>\r\n          );\r\n        })\r\n      ) : filterDate !== null ? (\r\n        <h3 className=\"expenses-list__fallback\">No dates available</h3>\r\n      ) : (\r\n        expenses.map((expense, ind) => {\r\n          return (\r\n            <ExpenseItem key={expense.id} expense={expense}>\r\n              Expense by {expense.title}\r\n            </ExpenseItem>\r\n          );\r\n        })\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ExpensesList;\r\n","import \"./Chart.css\";\r\n\r\nfunction ChartBar(props) {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{\r\n            height: barFillHeight,\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label?.slice(0, 3)}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nfunction Chart(props) {\r\n  let max = Math.max(...props.dataPoints.map((el) => el.value));\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.length > 0 ? (\r\n        props.dataPoints.map((dataPoint) => (\r\n          <ChartBar\r\n            key={dataPoint.id}\r\n            value={dataPoint.value}\r\n            maxValue={max}\r\n            label={dataPoint.label}\r\n          />\r\n        ))\r\n      ) : (\r\n        <p>No chart table in here</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    {\r\n      label: \"January\",\r\n      value: 0,\r\n      id: 1,\r\n    },\r\n    {\r\n      label: \"February\",\r\n      value: 0,\r\n      id: 2,\r\n    },\r\n    {\r\n      label: \"March\",\r\n      value: 0,\r\n      id: 3,\r\n    },\r\n    {\r\n      label: \"April\",\r\n      value: 0,\r\n      id: 4,\r\n    },\r\n    {\r\n      label: \"May\",\r\n      value: 0,\r\n      id: 5,\r\n    },\r\n    {\r\n      label: \"June\",\r\n      value: 0,\r\n      id: 6,\r\n    },\r\n    {\r\n      label: \"July\",\r\n      value: 0,\r\n      id: 7,\r\n    },\r\n    {\r\n      label: \"August\",\r\n      value: 0,\r\n      id: 8,\r\n    },\r\n    {\r\n      label: \"September\",\r\n      value: 0,\r\n      id: 9,\r\n    },\r\n    {\r\n      label: \"October\",\r\n      value: 0,\r\n      id: 10,\r\n    },\r\n    {\r\n      label: \"November\",\r\n      value: 0,\r\n      id: 11,\r\n    },\r\n    {\r\n      label: \"December\",\r\n      value: 0,\r\n      id: 12,\r\n    },\r\n  ];\r\n\r\n  for (const exp of props.expenses) {\r\n    const expenseMonth = exp.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += Number(exp.amount);\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./ExpensesItems.css\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nfunction ExpensesItems({ expenses, onFilterPrice }) {\r\n  const [filterDate, setFilterDate] = useState(\"2020\");\r\n  const [filteredExpenses, setFilteredExpenses] = useState([]);\r\n  const [showAllExpensesChart, setShowAllExpensesChart] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (filterDate) {\r\n      setFilteredExpenses((prev) => {\r\n        const filtered = expenses.filter(\r\n          (el) => el.date.getFullYear() === Number(filterDate)\r\n        );\r\n        if (filtered.length) {\r\n          return filtered;\r\n        } else {\r\n          return [];\r\n        }\r\n      });\r\n    }\r\n  }, [filterDate, expenses]);\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <div>\r\n        <ExpensesFilter\r\n          onFilterPrice={onFilterPrice}\r\n          onSetFilterDate={setFilterDate}\r\n          date={filterDate}\r\n          onSetFilteredExpenses={setFilteredExpenses}\r\n          onToggleShowAllExpensesChart={setShowAllExpensesChart}\r\n        />\r\n      </div>\r\n      <br />\r\n      {showAllExpensesChart ? (\r\n        <ExpensesChart expenses={expenses} date={filterDate} />\r\n      ) : (\r\n        <ExpensesChart expenses={filteredExpenses} date={filterDate} />\r\n      )}\r\n      <br />\r\n      <ExpensesList\r\n        expenses={expenses}\r\n        filteredExpenses={filteredExpenses}\r\n        filterDate={filterDate}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpensesItems;\r\n","import \"./ExpenseForm.css\";\r\nimport { useState, useRef } from \"react\";\r\n\r\nfunction ExpenseForm(props) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"0.00\");\r\n  const [submitted, setSubmitted] = useState(true);\r\n\r\n  let today = new Date();\r\n  const dd = String(today.getDate()).padStart(2, \"0\");\r\n  const mm = String(today.getMonth() + 1).padStart(2, \"0\");\r\n  const yyyy = today.getFullYear();\r\n  today = yyyy + \"-\" + mm + \"-\" + dd;\r\n  const [date, setExpenseDate] = useState(today);\r\n\r\n  function handleTitleChange(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n  function handleAmountChange(e) {\r\n    setAmount(e.target.value);\r\n  }\r\n  function handleExpenseDate(e) {\r\n    setExpenseDate(e.target.value);\r\n  }\r\n\r\n  const inputRef = useRef(null);\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!title || !amount) {\r\n      setSubmitted(false);\r\n    } else {\r\n      const expense = {\r\n        title: title,\r\n        amount: Number(amount),\r\n        date: new Date(date),\r\n      };\r\n      props.onSaveExpenseData(expense, \"Added\");\r\n      inputRef.current.focus();\r\n    }\r\n\r\n    setTitle(\"\");\r\n    setAmount(\"\");\r\n    setExpenseDate(\"\");\r\n  }\r\n\r\n  // Close form\r\n  function handleCloseForm(e) {\r\n    e.preventDefault();\r\n    props.onCloseForm();\r\n  }\r\n\r\n  // let count = 0;\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className={!Boolean(submitted) ? \"invalid-input\" : \"\"}\r\n    >\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            autoFocus\r\n            type=\"text\"\r\n            onChange={handleTitleChange}\r\n            placeholder=\"Title to set\"\r\n            value={title}\r\n            ref={inputRef}\r\n            name=\"title\"\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={handleAmountChange}\r\n            value={amount}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={handleExpenseDate}\r\n            value={date}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button onClick={handleCloseForm}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nfunction NewExpense(props) {\r\n  const saveExpenseDataHandler = (obj, msg) => {\r\n    const expenseData = {\r\n      ...obj,\r\n      quantity: 1,\r\n      id: Math.random().toString(),\r\n    };\r\n\r\n    props.onAddExpense(expenseData);\r\n    hideNewExpensesForm();\r\n  };\r\n\r\n  const [showForm, onSetToggleShowForm] = useState(true);\r\n\r\n  const showNewExpensesForm = () => {\r\n    onSetToggleShowForm(true);\r\n  };\r\n\r\n  const hideNewExpensesForm = () => {\r\n    onSetToggleShowForm(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {showForm ? (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCloseForm={hideNewExpensesForm}\r\n        />\r\n      ) : (\r\n        <button onClick={showNewExpensesForm}>Add New Expense</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;\r\n","import Author from \"./components/UI/Author\";\r\nimport \"./App.css\";\r\nimport ExpensesItems from \"./components/Expenses/ExpensesItems\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [allExpenses, setExpenses] = useState([\r\n    {\r\n      id: \"e1\",\r\n      title: \"Toilet Paper\",\r\n      amount: 94.12,\r\n      date: new Date(2020, 7, 14),\r\n      quantity: 4,\r\n    },\r\n    {\r\n      id: \"e2\",\r\n      title: \"New TV\",\r\n      amount: 799.49,\r\n      date: new Date(2021, 2, 12),\r\n      quantity: 2,\r\n    },\r\n    {\r\n      id: \"e3\",\r\n      title: \"Car Insurance\",\r\n      amount: 294.67,\r\n      date: new Date(2021, 2, 28),\r\n      quantity: 4,\r\n    },\r\n    {\r\n      id: \"e4\",\r\n      title: \"New Desk (Wooden)\",\r\n      amount: 450,\r\n      date: new Date(2021, 5, 12),\r\n      quantity: 4,\r\n    },\r\n  ]);\r\n\r\n  const author = { name: \"Ventsislav Iliev\", tag: true };\r\n\r\n  const addExpense = (expense) => {\r\n    setExpenses((prevState) => {\r\n      return [expense, ...prevState];\r\n    });\r\n  };\r\n\r\n  function filterByPrice(reset) {\r\n    if (reset) {\r\n      const filtered = allExpenses.sort((a, b) => a.amount - b.amount);\r\n\r\n      setExpenses((prev) => [...filtered]);\r\n    } else {\r\n      const filtered = allExpenses.sort((a, b) =>\r\n        a.title.localeCompare(b.title)\r\n      );\r\n      setExpenses((prev) => [...filtered]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"created\">\r\n        Created by <Author author={author} />\r\n      </div>\r\n      <NewExpense onAddExpense={addExpense} />\r\n\r\n      <ExpensesItems onFilterPrice={filterByPrice} expenses={allExpenses} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom/client';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}